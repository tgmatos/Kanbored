CREATE TABLE USERS
(
    USER_ID UUID DEFAULT uuid_generate_v7() PRIMARY KEY,
    USERNAME VARCHAR(256) UNIQUE NOT NULL,
    EMAIL VARCHAR(256) UNIQUE NOT NULL,
    PASSWORD VARCHAR NOT NULL,
    PROFILE_PICTURE BYTEA
);

CREATE TABLE PROJECTS
(
    PROJECT_ID UUID DEFAULT uuid_generate_v7() PRIMARY KEY,
    OWNER_ID UUID REFERENCES USERS(USER_ID) NOT NULL,
    PROJECT_NAME VARCHAR(256) NOT NULL,
    DESCRIPTION TEXT,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE USERS_PROJECTS
(
    PROJECT_ID UUID REFERENCES PROJECTS(PROJECT_ID),
    USER_ID UUID REFERENCES USERs(USER_ID),

    PRIMARY KEY (PROJECT_ID, USER_ID)
);

CREATE TABLE BOARDS
(
    BOARD_ID UUID DEFAULT uuid_generate_v7() PRIMARY KEY,
    PROJECT_ID UUID REFERENCES PROJECTS(PROJECT_ID) NOT NULL,
    BOARD_NAME VARCHAR(256) NOT NULL
);

CREATE TYPE PRIORITY AS ENUM
(
    'LOW',
    'NORMAL',
    'HIGH',
    'URGENT'
);

CREATE TABLE DEFAULT_TASK_TYPES
(
    TASK_TYPE_ID UUID DEFAULT uuid_generate_v7() PRIMARY KEY,
    TASK_TYPE_NAME VARCHAR(256) NOT NULL,
    TASK_TYPE_DESCRIPTION TEXT
);

INSERT INTO DEFAULT_TASK_TYPES(TASK_TYPE_NAME, TASK_TYPE_DESCRIPTION)
VALUES ('Task (default)', ''),
       ('Bug', ' Identify and track software bugs for resolution '),
       ('Milestone', ''),
       ('Request', ' Handle incoming requests or tasks from clients or team members ');

CREATE TABLE TASK_TYPES
(
    TASK_TYPE_ID UUID DEFAULT uuid_generate_v7() PRIMARY KEY,
    PROJECT_ID UUID REFERENCES PROJECTS(PROJECT_ID) NOT NULL,
    TASK_TYPE_NAME VARCHAR(256) NOT NULL,
    TASK_TYPE_DESCRIPTION TEXT
);

CREATE TABLE TASKS
(
    TASK_ID UUID DEFAULT uuid_generate_v7() UNIQUE,
    PROJECT_ID UUID REFERENCES PROJECTS(PROJECT_ID),
    BOARD_ID UUID REFERENCES BOARDS(BOARD_ID),
    TASK_NAME VARCHAR(512) NOT NULL,
    DESCRIPTION TEXT,
    CREATED_AT TIMESTAMP DEFAULT NOW() NOT NULL,
    UPDATED_AT TIMESTAMP DEFAULT NOW() NOT NULL,
    -- FEATURES
    PRIORITY PRIORITY DEFAULT 'NORMAL',
    DUE_DATE DATE,
    TASK_TYPE_ID UUID REFERENCES TASK_TYPES(TASK_TYPE_ID) NOT NULL,

    PRIMARY KEY (TASK_ID, PROJECT_ID)
);

CREATE TABLE RELATED_TASKS
(
  TASK_ID UUID REFERENCES TASKS(TASK_ID) UNIQUE,
  LINKED_TASK_ID UUID REFERENCES TASKS(TASK_ID) UNIQUE,

  PRIMARY KEY (TASK_ID, LINKED_TASK_ID)
);

CREATE TABLE TASKS_USERS
(
    TASK_ID UUID REFERENCES TASKS(TASK_ID) NOT NULL,
    USER_ID UUID REFERENCES USERS(USER_ID) NOT NULL,

    PRIMARY KEY (TASK_ID, USER_ID)
);
COMMENT ON TABLE TASKS_USERS IS 'THIS IS THE RELATIONSHIP BETWEEN A TASK AND ITS MEMBERS';

CREATE TABLE COMMENTS
(
    TASK_ID UUID REFERENCES TASKS(TASK_ID) NOT NULL,
    USER_ID UUID REFERENCES USERS(USER_ID) NOT NULL,
    COMMENT_ID UUID DEFAULT uuid_generate_v7(),
    COMMENT TEXT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT NOW() NOT NULL,

    PRIMARY KEY (TASK_ID, USER_ID, COMMENT_ID)
);

CREATE TABLE TAGS
(
    TAG_ID UUID DEFAULT uuid_generate_v7() PRIMARY KEY,
    PROJECT_ID UUID REFERENCES PROJECTS(PROJECT_ID) NOT NULL,
    TAG_NAME VARCHAR(256) NOT NULL,
    COLOR VARCHAR(6) DEFAULT '007CBA' NOT NULL
);

CREATE TABLE TAGS_TASKS
(
    TAG_ID UUID REFERENCES TAGS(TAG_ID),
    TASK_ID UUID REFERENCES TASKS(TASK_ID)
);

CREATE TABLE ATTACHMENTS
(
    ATTACHMENT_ID UUID DEFAULT uuid_generate_v7() PRIMARY KEY,
    TASK_ID UUID REFERENCES TASKS(TASK_ID) NOT NULL,
    PROJECT_ID UUID REFERENCES PROJECTS(PROJECT_ID) NOT NULL,
    ATTACHMENT BYTEA NOT NULL,
    ATTACHMENT_NAME VARCHAR(256) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT NOW() NOT NULL
);

